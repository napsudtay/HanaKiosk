import base64
import io
from PIL import Image

# example base64 string
base64_string = '/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAFk9Q05DOFlOSE5kXllphd6QhXp6hf/CzaHe////////////////////////////////////////////////////2wBDAV5kZIV1hf+QkP//////////////////////////////////////////////////////////////////////////wAARCAFjASkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwC3SMSFJAyfSlooAi8yT/nnSeZL/cqaigCHfL/co3zf3BU1FAEO6b+6KMzf3RU1FAEOZvQUv772qWigCHE3qKXE394VLRQBDtm/vCjZN/fFTZpM80ARbJf79Hlyf89Kk3ADJpPM5x+dADPKf/noaPJb/noak8xc4zRvX1FAEfkH++aPs/8Atn8qlyDS5FAEP2cf3j+VH2cf3jUpYDqRQGB6GgCL7Ov940fZ19TUuc0tAEX2dPU0fZ096looAi8hPejyE96looAj8hPf86PIj9P1qSigCPyY/wC7+tL5Kf3afRQAzyk/u0vlJ/dFOooAKKKKACiiigAoooPTigAoquXcygHjnpUsib8fNjFAD6KrRZE2M5xmluCdwHbFAFgEHoaKqj93NgHjNWqACiiigApjthTSOSORUDPkHNAEnmZ2Gjf8pPSq+7AxQW4xQBI0mefToKiLk8ZppNA6UALk+tGcUlFADtx9aNzepptGaAHA/jTgxPeo80ZoAseaU7kn0ppmc98VDS0AWo5AOCT+NTA5qij7e2anjnYnkce1AFiikFLQAVFJMq8Dk1LVe4QAAgck80ASq5aLcBz6VEZ3HVQPrUkH+qFRXBzIBQBMX2x7j6VD579cDFSTjEOPSof+WH/Av6UAWlO5QfWlpkP+qWn0AFFFFABRRRQBXk/14+oqcnAJqN4y0gYYxT3BKEDqaAIbcZdjSXH+s/CpYUKA56mkljL4I60ARSf678RVqoFiYvuc06RHZsq2B9aAJarySMDgHH1FI8cijO4n8ahbPcmgB4lYEn86YxB5FNpKAFpDRSHpmgBKd2ptLmgBelHSk70hOaADNLSAZp1ACUuaSigApc02loAXNPRgpyaZSigCxHOAPmzT/tCehquhGeVzVoRoR90UACTK7YANNufuD61IEVTkKAaUgHqAaAGQf6oVD964/GrIAAwKMD0oAbKpaMgdarZ/d7Mc5zVyigBkQKxgHrT6KKACiiigAooooAKKKKACiiigAooooAimJAzVQnNXJQChzVI0AIabmnUlAADRRSUAFFGKKAClApKWgBaKSigApKWigA4ooooAWikxS9KAJIgC+COKuKABgVSjbHU1ajcsMmgCSiiigAooooAWikpaACiiigAooooAKKKKACiiigAooooAKKKTNACNjHNUWGGIqzM+OO/UVVY5NACUUUlABiiiigBKKWkxQAUUuKMUAAooooAKKKKACilooASiiigBQcGrEDZPXFVsVLE5U5xmgC7RUH2g/wBw0vnn+5QBNRUPnn+5R57f3KAJqWofOb/nmaTzm/55mgCeimoxZckYp1ABRRRQAUUUUAReW/8AfNHlv/z0NS0UAReU3980eT/tmpaKAIfIH940eQP7xqaigCrPEFXIJqvVq4Hy5yfpVTNAC0lLSUAFLilAp4WgBmKNtShKeEpDINtIRVkpxTNlAEGKMVPspwQCgLFfaaNpqztowKLhYqlSKSrRQGomSi4WI6KCMUUxCVPbg7s1BUsDYcUAXaKKKACiiigApaSloAKKKKACiiigAooooARmC9TQzBRk1DKu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seaTFOxS4oAbilBI6GlxRigBRIR1FODK3tTKXFAAKWiigAooooAKKKKACikpaACkpaKAEpaKSgBaKSloAKTFLRQA3bSYIp9FADKKcRSYIoATFKGIpKWgBwYGnKxU1ERSq3rQBaVgwp1VlbHIqRpRsyOtKwxs7/wj8agJNL1NAFMQ3BNKFp2KWgBMUYp2OcYox7GgBKKdj2NGPY0ANop236/lRj6/lQA3FLS4+v5UoXPr+VADaKUjFJQAUUUUAFFFFACUtFFABRRRQAUUUUAFJRRQAUUUUALRRRQAUUUUAIabRRQAooHWiigApBRRQAo6iiiigBaKKKAHev0pKKKACiiigAooooAKUUUUAB6D60lFFABRRRQAUUUUAf/ZICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg'
# convert base64 string to bytes
img_data = base64.b64decode(base64_string)

# load bytes into BytesIO object
img_io = io.BytesIO(img_data)

# create PIL Image object from BytesIO object
img = Image.open(img_io)

# save image as JPG file
img.save("image.jpg", "JPEG")





